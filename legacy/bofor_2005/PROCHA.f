      SUBROUTINE PROCHA (ADDSUB,LEFT,MON,LNG,PROD)
      ! PROCESS THE NEXT PRODUCTION DELIVERED,THE USER
      INCLUDE 'PARS.F'
      INCLUDE 'MEMS.F'
      INCLUDE 'PROS.F'
      INCLUDE 'SYMS.F'
      INTEGER*2 PARASK
      INTEGER*2 I
     = ,ADDSUB   ! = 1(0) : ADD (SUBTRACT) THE PRODUCTION
     = ,LEFT     ! SYMBOL ON THE LEFT SIDE
     = ,LMEM     ! -> LAST MEMBER OF THE NEW PRODUCTION
     = ,LNG      ! THE LENGTH OF THE NEW PRODUCTION
     = ,M        ! = 1 ... FMEM-1
     = ,MEMB
     = ,MON      ! MEMBER NUMBER ONE
     = ,P1       ! -> PRODUCTION BEFORE THE ONE FOUND,'PROSAM'
     = ,P2       ! -> PRODUCTION FOUND,'PROSAM'
     = ,PROD     ! THE NEW PRODUCTION BUILT,'PROADD'
C
      ! SEE WHETHER A NEW PRODUCTION IS ALREADY IN THE GRAMMAR
      LMEM = MON + LNG - 1 ! THE LAST MEMBER OF THE NEW PRODUCTION
      P1 = 1
      PRO(1) = SYMPRO(LEFT)
      P2 = PRO(P1)
1     IF(P2 .GE. PROHIB) GOTO 2
        IF (LNG .NE. PROLNG(P2)) GOTO 3
        MEMB = PROMON(P2)
        M = MON
18      IF(M .GT. LMEM) GOTO 4
          IF (MEM(M) .NE. MEM(MEMB))
     =      GOTO 101 ! REALLY NEW PRODUCTION
          MEMB = MEMB + 1
          M = M + 1
        GOTO 18
4       CONTINUE ! DO M
        ! HERE ALL MEMBERS WERE EQUAL
        GOTO 100
3       CONTINUE ! SAME LENGTHS
101     CONTINUE
        P1 = P2
        P2 = PRO(P1)! ! TAKE NEXT PRODUCTION
        GOTO 1
2     CONTINUE ! ALL PRODUCTIONS OF 'LEFT'
100   CONTINUE
      ! 'P2 = PROHIB' : REALLY NEW PRODUCTION
      ! 'P2 .GE. PROHIB' : PRODUCTION 'P2' IS EQUAL,THE NEW ONE
      ! 'P1' IS NEEDED IF (PRODUCTION 'P2' SHOULD BE DELETED
      IF (P2 .NE. PROHIB) GOTO 5 ! REALLY NEW PRODUCTION
        IF (ADDSUB .NE. 1) GOTO 7 ! ADD THE PRODUCTION
          IF (FPRO .GE. PROHIB) GOTO 9 ! 'PRO'-ALLOCATE POSSIBLE
            PROD = FPRO
            FPRO = PRO(FPRO)!
            PROLEF(PROD) = LEFT
            PROMON(PROD) = MON
C           PROLNG(PROD) = FMEM - MON
C           PROMAR(PROD) = 0
            PRO   (PROD) = SYMPRO(LEFT)
            SYMPRO(LEFT) = PROD
            MEM   (FMEM) = 1 ! DUMMY SYMBOL BEHIND THE ENTIRE PRODUCTION
            MEMNUC(FMEM) = PROD
            IF (FMEM .GE. MEMHIB) GOTO 11
              FMEM = FMEM + 1
              GOTO 12
11          CONTINUE
              CALL ASSERT(19,-LEFT,FMEM)
12          CONTINUE
C$ENB$      CALL SEPUSH(SYMMAR,LEFT,SYMINT,SYMINB) ! SYMINS
          GOTO 10 ! ALLOCATE POSSIBLE
9         CONTINUE ! 'PRO'-OVERFLOW
            CALL ASSERT(16,-LEFT,FMEM)
            FMEM = MON ! DELETE THE PRODUCTION
10        CONTINUE ! OVERFLOW
        GOTO 8 ! ADD
7       CONTINUE ! SUBTRACT A PRODUCTION THAT IS UNKNOWN
          CALL ASSERT(54,MON,LEFT)
          FMEM = MON
8       CONTINUE ! SUBTRACT
      GOTO 6 ! NO SAME ONE FOUND
5     CONTINUE ! SAME PRODUCTION FOUND
        PROD = P2
        IF (ADDSUB .NE. 1) GOTO 13 ! ADD
          CALL ASSERT(17,PROD,-LEFT)
          FMEM = MON
        GOTO 14 ! ADD
13      CONTINUE ! SUBTRACT
          PRO(1) = SYMPRO(LEFT)
          P1 = 1
          P2 = PRO(P1)!
15        IF(P2 .GE. PROHIB) GOTO 16
            IF (P2 .NE. PROD) GOTO 17
              PRO(P1) = PRO(P2)
              PRO(P2) = FPRO
              FPRO = P2!
C             CALL SEPUSH(PROMAR,PROD,PRODET,PRODEB)
              GOTO 102
17          CONTINUE ! FOUND
            ! CONTINUETRY NEXT ELEMENT
            P1 = P2
            P2 = PRO(P1)!
            GOTO 15
16        CONTINUE ! ALL PRODUCTIONS OF 'LEFT'
          ! 'PROD' WAS NOT FOUND HERE
          CALL ASSERT(49,PROD,LEFT)
102       CONTINUE
         FMEM = MON
         SYMPRO(LEFT) = PRO(1)
14     CONTINUE ! SUBTRACT
6     CONTINUE ! SAME PRODUCTION
      IF (PARASK('PROCHA',1,6,0) .NE. 0)
     =    WRITE(UPRI,20) ADDSUB,LEFT,MON,LNG,PROD
20        FORMAT(' --- PROCHA ',5I6)
      RETURN! PROCHA
      END
