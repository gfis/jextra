      SUBROUTINE LRINIT
C     INITIALIZE PARSER-GENERATOR
C
      INCLUDE 'PARS.F'
      INCLUDE 'ITES.F'
      INCLUDE 'MEMS.F'
      INCLUDE 'PRES.F'
      INCLUDE 'PROS.F'
      INCLUDE 'STAS.F'
      INCLUDE 'SYMS.F'
      INTEGER*2 I
     = ,GOT   ! = 1 (0) IF THE STATE WAS (NOT) READ IN
     = ,I1,I2 ! RESULT OF 'ITEMA2'
     = ,MON1     ! MEMBER NUMBER ONE OF THE HYPER-RULE
     = ,PROD     ! PRODUCTION RETURNED BY 'PROCHA'
     = ,STATE3   ! DELTA(2,HYPER-AXIOM) = (->,3)
C
      CALL LILINK(ITEHIB,ITE   ,FITE)
      CALL LILINK(PREHIB,PRE   ,FPRE)
      CALL LILINK(PROHIB,PRO   ,FPRO)
      CALL LILINK(STAHIB,STAPRE,FSTA)
      FNUM = FSTA ! INCREMENTED IN 'STAALL'
      DO 2 I = 1,SYMHIB
        SYMPRO(I) = PROHIB
        SYMRST(I) = STAHIB
        SYMMAR(I) = 0
2     CONTINUE ! INITIALIZE 'SYM'
      STARST(STAHIB) = STAHIB
C
      PRESTA(PREHIB) = STAHIB ! FOR 'PREINS'
C
      RETURN ! LRINIT
C--------------------------------------------------------
      ENTRY LRAXIO
C     INITIALIZE THE PARSER WITH THE RULE FOR THE HYPER-AXIOM
C
      MEM(FMEM - 1) = EOP ! A DUMMY SYMBOL BEFORE THE 1ST PRODUCTION
      MON1 = FMEM
      MEM(FMEM) = EOFILE
      CALL STAALL(STATE2,MEM(FMEM))
      FMEM = FMEM + 1
      AXIOM = FSYM
      CALL HAPSE('AXIOM', 1, 5)
      CALL HAMAP(  AXIOM)
      
      MEM(FMEM) = AXIOM
      CALL STAALL(STATE3,MEM(FMEM))
      FMEM = FMEM + 1
      MEM(FMEM) = EOFILE
      FMEM = FMEM + 1
      CALL LRDUMP
C     PROD1 = (HYPER_AXIOM = EOFILE AXIOM EOFILE)
C
      I= 1
      CALL PROCHA (1 ! ADDSUB = ADD
     = ,I            ! HYPER-AXIOM
     = ,MON1
     = ,3            ! LNG
     = ,PROD)
      CALL PREINS(STATE2,STATE3)

      CALL ITEINS (STATE2,MON1+1,  I1,I2)
      I1 = STAITE(STATE2)
      ITESUC(I1) = STATE3
      CALL ITEINS (STATE3,MON1+2,  I1,I2)
      I1 = STAITE(STATE3)
      ITESUC(I1) = 1
      
CCC   CALL ITEMA2 (STATE2,  I1,I2,GOT)
CCC   CALL ITEALL (AXIOM,MON1+1,SHIFT,STATE3,  I1,I2)
CCC   CALL ITEMA9 (STATE2,1) ! 'GOT' BY 'STAALL'
C
CCC   CALL ITEMA2 (STATE3,  I1,I2,GOT)
CCC   CALL ITEALL (EOFILE,MON1+2,ACCEPT,1,     I1,I2)
CCC   CALL ITEMA9 (STATE3,1) ! 'GOT' BY 'STAALL'
C     TABLE0 = (1 EOFILE ?? 2 AXIOM -> 3 EOFILE =.)
C
      RETURN ! LRAXIO
      END
